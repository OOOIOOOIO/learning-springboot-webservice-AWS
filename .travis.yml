# 언어와 jdk의 버전을 지정
language: java
jdk:
  - openjdk11

# 어느 브랜치가 push 될 때 수행할지 지정
# 오직 main 브랜치가 push될 때 수행하도록 지정
branches:
  only:
    - master

# 빌드 전에 gradlew의 권한을 추가
before_install:
  - chmod +x gradlew

# Travis CI 서버의 Home
# gradle을 통하여 의존성을 받게 되면 이를 캐시하여 배포할 때 마다 다시 받지 않도록 설정
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# main 브랜치에 push 되면 수행되는 명령어
# 프로젝트 내에 권한이 추가된 gradlew를 활용하여 clean, build를 진행
script: "./gradlew clean build"


# deploy 명령어가 실행되기 전에 수행된다.
# CodeDeploy는 Jar 파일을 인식하지 못하므로 Jar+기타 설정 파일들을 모아 압축한다.
before_deploy:
  - zip -r learning-springboot-webservice-AWS # 햔제 위치의 모든 파일을 learning-springboot-webservice-AWS 이름으로 압축한다. 명령어의 마지막 위치는 보닌의 프로젝트 이름이여야 한다.
  - mkdir -p deploy # deploy 디렉토리를 Travis CI가 실행 중인 위치에 생성
  - mv learning-springboot-webservice-AWS.zip deploy/learning-springboot-webservice-AWS.zip # learning-springboot-webservice-AWS.zip 파일을 deploy/learning-springboot-webservice-AWS.zip 으로 이동

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo setting에 설정된 값
    secret_access_key: $AWS_SECRET_KEY
    bucket: seongho-s3-bucket # bucket 이름
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy # before_deply에서 생성한 디렉토리, 해당 위치의 파일들만 S3로 전송
    wait-until-deployed: true

# CI 실행 완료 시 작성한 이메일로 알람
notifications:
  email:
    recipients:
      - polite159@gmail.com